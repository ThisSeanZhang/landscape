name: "build and release"

on:
  push:
    tags:
      - 'v*'


jobs:
  build-rust:
    runs-on: ubuntu-latest
    container: thisseanzhang/landscape:build_base

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Rust binaries
        run: |
          mkdir output
          cargo build --release
          cp target/release/landscape-webserver output/landscape-webserver-x86_64
          cargo build --target aarch64-unknown-linux-gnu --release
          cp target/aarch64-unknown-linux-gnu/release/landscape-webserver output/landscape-webserver-aarch64

      - name: Upload Rust Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rust-output
          path: output/*

  build-front:
    runs-on: ubuntu-latest
    container: node:18.20.7-alpine3.21
    needs: build-rust

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build frontend
        run: |
          mkdir output
          cd landscape-webui
          yarn install --cache-folder /yarn
          NODE_OPTIONS="--max-old-space-size=1700" yarn build
          mkdir static && mv dist/* static/
          apk add zip
          zip -r ../output/static.zip static

      - name: Upload Frontend Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-output
          path: output/static.zip

  publish:
    runs-on: ubuntu-latest
    needs: [build-rust, build-front]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Rust artifacts
        uses: actions/download-artifact@v4
        with:
          name: rust-output
          path: ./output

      - name: Download Frontend artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-output
          path: ./output

      - name: Generate SHASUM
        run: |
          cd output
          sha256sum * > SHASUM256sum.txt

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          body: |
            Auto-generated release from GitHub Actions.
          prerelease: true
          generate_release_notes: true
          files: |
            output/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
